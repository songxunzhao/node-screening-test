{"version":3,"sources":["store/constants/user.constants.ts","helpers/history.ts","helpers/formatter.ts","services/deposits.service.ts","services/storage.service.ts","services/users.service.ts","store/reducers/authentication.reducer.ts","store/constants/alert.constants.ts","store/reducers/index.ts","store/reducers/alert.reducer.ts","store/reducers/registration.reducer.ts","store/index.ts","services/http.service.ts","services/account.service.ts","store/actions/alert.action.ts","store/actions/user.action.ts","config.ts","pages/login/LoginPage.tsx","pages/register/RegisterPage.tsx","components/NavBar.tsx","pages/styles.ts","pages/deposits/DepositListPage.tsx","pages/deposits/DepositPage.tsx","pages/home/HomePage.tsx","components/PrivateRoute.tsx","pages/users/UserListPage.tsx","pages/users/UserPage.tsx","pages/deposits/RevenuePage.tsx","App.tsx","reportWebVitals.ts","index.tsx","models/index.ts","models/deposit.model.ts","models/revenue.model.ts"],"names":["userConstants","history","createBrowserHistory","formatter","formatDate","date","getFullYear","getMonth","getDate","formatNumber","number","toFixed","searchOptions","queryParams","Object","keys","map","key","queryStr","join","url","httpService","get","response","ok","json","responseData","result","value","depositModelFromJson","Error","period","from","to","revenueModelFromJson","id","status","message","deposit","post","put","delete","authStorage","save","authData","user","token","localStorage","setItem","JSON","stringify","load","userJson","getItem","parse","clear","removeItem","auth","initialState","loggedIn","alertConstants","rootReducer","combineReducers","alert","state","action","type","authentication","loggingIn","registration","registering","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","BASE_URL","headers","requestOptions","method","this","fetch","data","body","assign","getAuthHeader","dispatch","userActions","logout","push","email","password","alertActions","success","error","login","accountService","then","loginResponse","console","log","failure","register","request","getAll","usersService","users","config","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","inputError","color","connectedLoginPage","connect","props","emailRegex","useForm","handleSubmit","errors","watch","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","onSubmit","TextField","required","fullWidth","label","name","autoComplete","autoFocus","inputRef","pattern","minLength","Button","Grid","container","justify","item","Link","href","connectedRegisterPage","xs","root","flexGrow","menuButton","marginRight","nav","link","fontSize","fontWeight","textDecoration","connectedHomePage","useState","anchorEl","setAnchorEl","open","Boolean","AppBar","position","Toolbar","IconButton","onClick","edge","aria-label","Dashboard","role","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","page","marginBottom","searchBar","searchDate","marginLeft","searchAmount","searchBarButton","table","tableBar","dangerButton","operationCell","whiteSpace","connectedDepositListPage","pageClasses","pageStyles","setSearchOptions","deposits","setDeposits","setError","useHistory","handleEdit","handleDelete","a","depositService","index","findIndex","row","splice","slice","handleSearchChange","e","element","getDeposits","search","results","useEffect","fixed","Alert","severity","onChange","Search","Create","TrendingUp","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","bankName","accountNumber","initialAmount","startDate","endDate","interestPercentage","taxesPercentage","bind","Edit","Delete","connectedDepositPage","depositId","useParams","setUsers","control","reset","loading","setLoading","getDeposit","depositsService","depositObject","getUsers","userId","undefined","update","create","initialize","find","AttachMoney","inputProps","step","min","render","Autocomplete","options","getOptionLabel","option","_","style","renderInput","params","defaultValue","rules","paperButton","padding","cursor","paperPrimary","primary","paperWaring","warning","paperSuccess","operationIcon","verticalAlign","operationSection","md","ViewList","PrivateRoute","Component","rest","pathname","location","connectedUserPage","formControl","minWidth","userObject","getUser","Person","FormControl","InputLabel","as","Select","fillAvailable","topTableBar","gainCell","lossCell","textRight","textAlign","bottomTableBar","connectedRevenuePage","revenues","setRevenues","Date","setPeriod","getRevenues","revenue","handlePeriodChange","change","reduce","acc","sumChanges","App","listen","exact","path","HomePage","LoginPage","connectedApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.16db4c5c.chunk.js","sourcesContent":["export const userConstants = {\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE'\n}","import { createBrowserHistory } from 'history';\nexport const history = createBrowserHistory();\n\n","function formatDate(date: Date) {\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\n}\n\nfunction formatNumber(number: number): string {\n    return number.toFixed(2)\n}\n\nconst formatter = {\n    formatDate,\n    formatNumber\n}\n\nexport {formatter}\n","import httpService from './http.service';\nimport { ResponseDataModel } from \"../models\";\nimport {DepositModel, depositModelFromJson} from \"../models\";\nimport {RevenueModel, revenueModelFromJson} from \"../models\";\n\nclass DepositsService {\n    public async search(searchOptions: {[key:string]: any}): Promise<DepositModel[]> {\n        const queryParams = Object.keys(searchOptions).map(key => {\n            return `${key}=${searchOptions[key]}`;\n        })\n        const queryStr = queryParams.join('&');\n\n        const url = '/deposits/?' + queryStr;\n        const response: Response = await httpService.get(url, {});\n        if(response.ok) {\n            const responseData:ResponseDataModel = await response.json()\n            return responseData.result.map(\n                (value: DepositModel) => depositModelFromJson(value)\n            )\n        } else {\n            throw new Error('Server error')\n        }\n    }\n    public async revenue(period: {from: string, to: string}): Promise<RevenueModel[]> {\n        const queryStr = `from=${period.from}&to=${period.to}`\n\n        const url = '/deposits/revenue?' + queryStr;\n        const response: Response = await httpService.get(url, {});\n        if(response.ok) {\n            const responseData:ResponseDataModel = await response.json()\n            return responseData.result.map(\n                (value: any) => revenueModelFromJson(value)\n            )\n        } else {\n            throw new Error('Server error')\n        }\n    }\n\n    public async get(id: string): Promise<DepositModel> {\n        const url = `/deposits/${id}`;\n\n         const response = await httpService.get(url, {});\n\n         if(response.ok) {\n             const responseData: ResponseDataModel = await response.json();\n             return depositModelFromJson(responseData.result)\n         }\n         else if(response.status < 500) {\n            const responseData: ResponseDataModel = await response.json();\n            throw new Error(responseData.message)\n         } else {\n            throw new Error('Server error')\n         }\n    }\n\n    public async create(deposit: any): Promise<Response> {\n        const url = '/deposits/';\n        const response = await httpService.post(url, {}, deposit);\n        if(response.ok) {\n            return response\n        } else if(response.status < 500) {\n            const responseData: ResponseDataModel = await response.json();\n            throw new Error(responseData.message)\n        } else {\n            throw new Error('Server error')\n        }\n    }\n\n    public async update(id: string, deposit: any): Promise<Response> {\n        const url = `/deposits/${id}`;\n        const response = await httpService.put(url, {}, deposit);\n        if(response.ok) {\n            return response\n        } else if(response.status < 500) {\n            const responseData: ResponseDataModel = await response.json();\n            throw new Error(responseData.message)\n        } else {\n            throw new Error('Server error')\n        }\n    }\n\n    public async delete(id: string): Promise<Response> {\n        const url = `/deposits/${id}`;\n        const response = await httpService.delete(url, {});\n        if(response.ok) {\n            return response\n        } else if(response.status < 500) {\n            const responseData: ResponseDataModel = await response.json();\n            throw new Error(responseData.message)\n        } else {\n            throw new Error('Server error')\n        }\n    }\n}\n\nexport default new DepositsService();\n","import { UserModel } from \"../models/user.model\";\n\nconst authStorage = {\n    save,\n    load,\n    clear\n}\n\nexport interface AuthStoreModel {\n    user: UserModel;\n    token: string\n}\n\nfunction save(authData: AuthStoreModel) {\n    const {user, token} = authData;\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('token', token);\n}\n\nfunction load(): AuthStoreModel|null {\n    const userJson = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if(userJson && token) {\n        return {\n            user: JSON.parse(userJson),\n            token\n        }\n    } else {\n        return null;\n    }\n}\n\nfunction clear(): void {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n}\n\nexport { authStorage }\n","import httpService from './http.service';\nimport { UserModel } from '../models';\nimport { ResponseDataModel } from '../models';\n\nclass UsersService {\n    public async getAll(): Promise<UserModel[]> {\n        const url = '/users/';\n        const response: Response = await httpService.get(url, {});\n        if(response.ok) {\n            const responseData: ResponseDataModel = await response.json();\n            return responseData.result;\n        } else {\n            throw new Error('Server error')\n        }\n    }\n\n    public async get(id: string): Promise<UserModel> {\n        const url = `/users/${id}`;\n        const response: Response = await httpService.get(url, {});\n        const responseData: ResponseDataModel = await response.json();\n        return responseData.result;\n    }\n\n    public async create(user: any): Promise<UserModel> {\n        const url = '/users/';\n        const response: Response = await httpService.post(url, {}, user);\n        const responseData: ResponseDataModel = await response.json();\n        return responseData.result;\n    }\n\n    public async update(id: string, user: any): Promise<UserModel> {\n        const url = `/users/${id}`;\n        const response: Response = await httpService.put(url, {}, user);\n        const responseData: ResponseDataModel = await response.json();\n        return responseData.result;\n    }\n\n    public delete(id: string): Promise<Response> {\n        const url = `/users/${id}`;\n        return httpService.delete(url, {});\n\n    }\n}\n\nexport default new UsersService();\n","import { userConstants } from \"../constants\";\nimport { Action } from 'redux';\nimport { UserModel } from \"../../models\";\nimport { authStorage } from \"../../services\";\n\nconst auth = authStorage.load();\n\nconst initialState = auth ? { loggedIn: true, user: auth.user, token: auth.token } : {};\n\nexport interface AuthAction extends Action {\n    user: UserModel;\n    token: string;\n}\n\nexport interface AuthenticationState {\n    loggingIn?: boolean;\n    loggedIn?: boolean;\n    user?: UserModel;\n    token?: string;\n}\n\nexport function authentication(state: AuthenticationState = initialState, action: AuthAction) {\n    switch (action.type) {\n        case userConstants.LOGIN_REQUEST:\n            return {\n                loggingIn: true,\n                user: action.user\n            };\n        case userConstants.LOGIN_SUCCESS:\n            return {\n                loggedIn: true,\n                user: action.user,\n                token: action.token\n            };\n        case userConstants.LOGIN_FAILURE:\n            return {};\n        case userConstants.LOGOUT:\n            return {};\n        default:\n            return state\n    }\n}\n","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR'\n};\n","import { combineReducers } from 'redux';\nimport { authentication } from './authentication.reducer';\nimport { registration } from './registration.reducer';\nimport { alert } from './alert.reducer';\n\nconst rootReducer = combineReducers({\n    alert,\n    authentication,\n    registration\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { alertConstants } from '../constants/alert.constants'\nimport {Action} from 'redux';\n\nexport interface AlertState {\n    type?: \"success\"|\"error\"|undefined,\n    message?: string\n}\nexport interface AlertAction extends Action {\n    message: string;\n}\n\nexport function alert(state: AlertState = {}, action: AlertAction) {\n    switch (action.type) {\n        case alertConstants.SUCCESS:\n            return {\n                type: 'success',\n                message: action.message\n            };\n        case alertConstants.ERROR:\n            return {\n                type: 'error',\n                message: action.message\n            };\n        case alertConstants.CLEAR:\n            return {};\n        default:\n            return state\n    }\n}\n","import {userConstants} from \"../constants\";\nimport { Action } from 'redux';\n\ninterface RegistrationState {\n    registering?: boolean\n}\n\nexport function registration(state: RegistrationState = {}, action: Action) {\n    switch (action.type) {\n        case userConstants.REGISTER_REQUEST:\n            return { registering: true };\n        case userConstants.REGISTER_SUCCESS:\n            return {};\n        case userConstants.REGISTER_FAILURE:\n            return {};\n        default:\n            return state\n    }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from \"./reducers\";\nimport { createLogger } from 'redux-logger';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n)\n","import {store} from '../store'\nimport {history} from '../helpers/history'\nimport {userActions} from \"../store/actions/user.action\";\n\nclass HttpService {\n    private BASE_URL = '/api/v1'\n    private getAuthHeader(): {} {\n        const token = localStorage.getItem('token');\n\n        if (token) {\n            return { 'Auth': token };\n        } else {\n            return {};\n        }\n    }\n\n    public get(url: string, headers: {} = {}): Promise<Response> {\n        const requestOptions = {\n            method: 'GET',\n            headers\n        }\n\n        return this.fetch(url, requestOptions);\n    }\n\n    public post(url: string, headers: {} = {}, data: any = {}): Promise<Response> {\n        const requestOptions = {\n            method: 'POST',\n            headers,\n            body: JSON.stringify(data)\n        }\n        return this.fetch(url, requestOptions);\n    }\n\n    public put(url: string, headers: {} = {}, data: any): Promise<Response> {\n        const requestOptions = {\n            method: 'PUT',\n            headers,\n            body: JSON.stringify(data)\n        }\n\n        return this.fetch(url, requestOptions);\n    }\n\n    public delete(url: string, headers: {}): Promise<Response> {\n        const requestOptions = {\n            method: 'DELETE',\n            headers\n        }\n\n        return this.fetch(url, requestOptions);\n    }\n\n    public async fetch(url: string, requestOptions: any): Promise<Response> {\n        requestOptions.headers = requestOptions.headers ?? {};\n        requestOptions.headers = Object.assign({\n            'Content-Type': 'application/json'\n        }, this.getAuthHeader());\n\n        const response = await fetch(this.BASE_URL + url, requestOptions);\n        if(response.status === 401) {\n            store.dispatch(userActions.logout())\n            history.push('/')\n        }\n        return response\n    }\n}\n\nexport default new HttpService();\n","import httpService from './http.service';\nimport { UserModel } from \"../models\";\nimport {authStorage} from \"./storage.service\";\n\nexport interface LoginResponseModel {\n    user: UserModel,\n    token: string\n}\n\nclass AccountService {\n    public async login(email: string, password: string): Promise<LoginResponseModel> {\n        const response: Response = await httpService.post('/account/login', {}, {\n            email,\n            password\n        });\n\n        if(response.ok) {\n            const responseData = await response.json()\n            return responseData.result;\n        } else if(response.status === 401) {\n            const responseData = await response.json()\n            throw new Error(responseData.message)\n        } else {\n            throw new Error('Server error')\n        }\n\n    }\n\n    public logout() {\n        authStorage.clear();\n    }\n\n    public register(user: {[key: string]: any}): Promise<Response> {\n        return httpService.post('/account/register', {}, user);\n    }\n}\n\nexport default new AccountService();\n","import { alertConstants } from '../constants/alert.constants'\n\nexport const alertActions = {\n    success,\n    error,\n    clear\n};\n\nfunction success(message: string) {\n    return { type: alertConstants.SUCCESS, message };\n}\n\nfunction error(message: string) {\n    return { type: alertConstants.ERROR, message };\n}\n\nfunction clear() {\n    return { type: alertConstants.CLEAR };\n}\n","import {userConstants} from \"../constants\";\nimport {ThunkDispatch} from 'redux-thunk';\nimport { history } from '../../helpers';\nimport accountService, {LoginResponseModel} from '../../services/account.service';\nimport usersService from '../../services/users.service';\nimport { UserModel } from \"../../models\";\nimport {alertActions} from \"./alert.action\";\nimport {authStorage} from \"../../services\";\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getAll,\n    delete: _delete\n};\n\nfunction login(email: string, password: string) {\n    return (dispatch:ThunkDispatch<any, any, any>) => {\n        dispatch(request({ email }));\n\n        accountService.login(email, password)\n            .then(\n                (loginResponse: LoginResponseModel) => {\n                    const { user, token } = loginResponse;\n                    dispatch(success(user, token));\n                    authStorage.save({\n                        user,\n                        token\n                    })\n                    history.push('/');\n                },\n                error => {\n                    console.log(error);\n                    dispatch(failure(error));\n                    dispatch(alertActions.error(error.message));\n                })\n    };\n\n    function request(user: UserModel) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user: UserModel, token: string) { return { type: userConstants.LOGIN_SUCCESS, user, token } }\n    function failure(error: Error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    accountService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user: UserModel) {\n    return (dispatch: ThunkDispatch<any, any, any>) => {\n        dispatch(request(user));\n\n        accountService.register(user)\n            .then(\n                response => {\n                    dispatch(success(user));\n                    history.push('/login');\n                    dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error));\n                    dispatch(alertActions.error(error));\n                }\n            );\n    };\n\n    function request(user: UserModel) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user: UserModel) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error: Error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return (dispatch: ThunkDispatch<any, any, any>) => {\n        dispatch(request());\n\n        usersService.getAll()\n            .then(\n                (users: UserModel[]) => dispatch(success(users)),\n                (error: Error) => dispatch(failure(error))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users: UserModel[]) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error: Error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id: string) {\n    return (dispatch: ThunkDispatch<any, any, any>) => {\n        dispatch(request(id));\n\n        usersService.delete(id)\n            .then(\n                user => {\n                    dispatch(success(id));\n                },\n                error => {\n                    dispatch(failure(id, error));\n                }\n            );\n    };\n\n    function request(id: string) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id: string) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id: string, error: Error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}\n","const config = {\n    emailRegex: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n};\n\nexport {config}\n","import React, {ChangeEvent, ComponentProps, ReactPropTypes, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport {RootState} from \"../../store/reducers\";\nimport {connect} from \"react-redux\";\nimport {useForm} from 'react-hook-form';\nimport {userActions} from \"../../store/actions/user.action\";\nimport {config} from \"../../config\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    inputError: {\n        color: theme.palette.error.main\n    }\n}));\n\nconst LoginPage = function(props: ComponentProps<any>) {\n    const emailRegex = config.emailRegex\n\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    const classes = useStyles();\n\n    const onSubmit = (data: any) => {\n        const { dispatch } = props;\n        const { email, password } = data;\n        dispatch(userActions.login(email, password))\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        inputRef={register({ required: true, pattern: emailRegex })}\n                    />\n                    <div className={classes.inputError}>{errors.email && \"Please type in valid email\"}</div>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        inputRef={register({ required: true, minLength: 6 })}\n                    />\n                    <div className={classes.inputError}>{errors.password && \"Please type in valid password\"}</div>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container justify='center'>\n                        <Grid item >\n                            <Link href=\"/register\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nfunction mapStateToProps(state: RootState) {\n    const { loggingIn } = state.authentication;\n    return {\n        loggingIn\n    };\n}\n\nconst connectedLoginPage = connect(mapStateToProps)(LoginPage);\nexport { connectedLoginPage as LoginPage }\n","import React, {ComponentProps} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {connect} from \"react-redux\";\nimport {RootState} from \"../../store/reducers\";\nimport {useForm} from \"react-hook-form\";\nimport {userActions} from \"../../store/actions/user.action\";\nimport {config} from \"../../config\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    inputError: {\n        color: theme.palette.error.main\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst RegisterPage = (props: ComponentProps<any>) => {\n    const emailRegex = config.emailRegex\n    const classes = useStyles();\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    const onSubmit = (data: any) => {\n        const { dispatch } = props;\n        dispatch(userActions.register(data))\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"name\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"Name\"\n                                autoFocus\n                                inputRef={register({ required: true, minLength: 4 })}\n                            />\n                            <div className={classes.inputError}>{errors.email && \"Please type in valid name\"}</div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                inputRef={register({ required: true, pattern: emailRegex })}\n                            />\n                            <div className={classes.inputError}>{errors.email && \"Please type in valid email\"}</div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                inputRef={register({ required: true, minLength: 6 })}\n                            />\n                            <div className={classes.inputError}>{errors.email && \"Please type in valid password\"}</div>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nfunction mapStateToProps(state: RootState) {\n    const { registering } = state.registration;\n    return {\n        registering\n    };\n}\n\nconst connectedRegisterPage = connect(mapStateToProps)(RegisterPage);\nexport { connectedRegisterPage as RegisterPage };\n","import React, {ComponentProps, useState} from 'react'\nimport {AppBar, Button, IconButton, Menu, MenuItem, Toolbar} from \"@material-ui/core\";\nimport {AccountCircle, Dashboard} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\nimport {history} from \"../helpers/history\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {RootState} from \"../store/reducers\";\nimport {connect} from \"react-redux\";\nimport {userActions} from \"../store/actions/user.action\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    nav: {\n        flexGrow: 1,\n    },\n    link: {\n        color: 'white',\n        fontSize: '1.2em',\n        fontWeight: 'bold',\n        textDecoration: 'none',\n        marginRight: theme.spacing(3)\n    }\n}));\n\n\nconst NavBar = (props: ComponentProps<any>) => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null as any);\n    const { user } = props\n    const open = Boolean(anchorEl);\n\n    const handleDashboard = () => {\n        history.push('/')\n    }\n\n    const handleMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleCloseMenu = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = () => {\n        setAnchorEl(null);\n        const { dispatch } = props;\n        history.push('/')\n        dispatch(userActions.logout())\n    };\n\n    return (\n        <>\n        {user &&\n        <AppBar position='static'>\n            <Toolbar>\n                <IconButton onClick={handleDashboard} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    <Dashboard />\n                </IconButton>\n                <div className={classes.nav}>\n                    { user.role === 'ADMIN' &&\n                    <Link className={classes.link} to=\"/users\">\n                        Users\n                    </Link>\n                    }\n\n                    <Link className={classes.link} to=\"/deposits\">\n                        Deposits\n                    </Link>\n                </div>\n\n                <div>\n                    <IconButton\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleMenu}\n                        color=\"inherit\"\n                    >\n                        <AccountCircle />\n                    </IconButton>\n                    <Menu\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleCloseMenu}\n                    >\n                        <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                    </Menu>\n                </div>\n            </Toolbar>\n        </AppBar>\n        }\n        </>\n    )\n}\n\nfunction mapStateToProps(state: RootState) {\n    const { user } = state.authentication;\n    return {\n        user\n    };\n}\n\nconst connectedHomePage = connect(mapStateToProps)(NavBar);\nexport { connectedHomePage as NavBar }\n","import {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    page: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    },\n}))\nexport default useStyles\n","import React, {ChangeEvent, ComponentProps, useEffect, useState} from 'react';\nimport {RootState} from \"../../store/reducers\";\nimport {connect} from \"react-redux\";\nimport {NavBar} from \"../../components/NavBar\";\nimport depositService from '../../services/deposits.service';\nimport {\n    Button,\n    Container,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow, TextField\n} from \"@material-ui/core\";\nimport {CloudDownload, Create, Delete, Edit, Search, TrendingUp} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {DepositModel} from '../../models';\nimport {useHistory} from \"react-router\";\nimport {Alert} from \"@material-ui/lab\";\nimport pageStyles from '../styles';\nimport {formatter} from '../../helpers';\n\nconst useStyles = makeStyles((theme) => ({\n    searchBar: {\n        flexGrow: 1\n    },\n    searchDate: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 150\n    },\n    searchAmount: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 50\n    },\n    searchBarButton: {\n        marginRight: theme.spacing(2)\n    },\n    table: {},\n    tableBar: {\n        marginBottom: '5px'\n    },\n    dangerButton: {\n        backgroundColor: theme.palette.error.main\n    },\n    operationCell: {\n        whiteSpace: 'nowrap'\n    }\n}))\n\nconst DepositListPage = (props: ComponentProps<any>) => {\n    const pageClasses= pageStyles()\n    const classes = useStyles()\n    const [searchOptions, setSearchOptions] = useState({} as any)\n    const [deposits, setDeposits] = useState([] as DepositModel[])\n    const [error, setError] = useState('')\n    const history = useHistory();\n\n    const handleEdit = (id: string) => {\n        history.push(`/deposits/edit/${id}`);\n    }\n\n    const handleDelete = async (id: string) => {\n        try {\n            await depositService.delete(id)\n            const index = deposits.findIndex((row) => row.id === id)\n            deposits.splice(index, 1)\n            setDeposits(deposits.slice())\n        } catch(e) {\n            setError(e.message)\n        }\n    }\n\n    const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const element: HTMLInputElement = e.currentTarget\n        setSearchOptions(Object.assign({}, searchOptions, {\n            [element.name]: element.value\n        }))\n    }\n\n    const handleSearch = () => {\n        getDeposits(searchOptions)\n    }\n\n    const handleCreate = () => {\n        history.push(`/deposits/create`);\n    }\n\n    const handleDownload = () => {\n        history.push(`/deposits/revenue`);\n    }\n\n    const getDeposits = async (searchOptions: object): Promise<void> => {\n        try {\n            const results = await depositService.search(searchOptions)\n            setDeposits(results)\n        } catch(e) {\n            setError(e.message)\n        }\n    }\n\n    useEffect(() => {\n        getDeposits({})\n    }, [])\n\n    return (\n        <>\n            <NavBar/>\n            <Container fixed className={pageClasses.page}>\n                {error !== '' && <Alert severity='error'>{error}</Alert>}\n                <Grid container spacing={3} className={classes.tableBar}>\n                    <Grid item className={classes.searchBar}>\n                        <TextField label='Start' name='from' type='date' className={classes.searchDate} onChange={handleSearchChange}/>\n                        <TextField label='Expire' name='to' type='date' className={classes.searchDate} onChange={handleSearchChange}/>\n                        <TextField label='Min' name='min' type='number' className={classes.searchAmount} onChange={handleSearchChange}/>\n                        <TextField label='Max' name='max' type='number' className={classes.searchAmount} onChange={handleSearchChange}/>\n                        <TextField label='Bank Name' name='bank' type='search' className={classes.searchDate} onChange={handleSearchChange}/>\n                        <Button variant='contained' className={classes.searchBarButton} onClick={handleSearch}>\n                            <Search/>Search\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button variant='contained' color='primary' className={classes.searchBarButton} onClick={handleCreate}>\n                            <Create/>Create\n                        </Button>\n                        <Button variant='contained' color='primary' className={classes.searchBarButton} onClick={handleDownload}>\n                            <TrendingUp/>Revenue Report\n                        </Button>\n                    </Grid>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} size='small' aria-label='Deposit Table'>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Id</TableCell>\n                                <TableCell>Bank Name</TableCell>\n                                <TableCell>Account Number</TableCell>\n                                <TableCell>Initial Amount</TableCell>\n                                <TableCell>Start</TableCell>\n                                <TableCell>Expire</TableCell>\n                                <TableCell>Interest Rate</TableCell>\n                                <TableCell>Tax Rate</TableCell>\n                                <TableCell>User</TableCell>\n                                <TableCell/>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {deposits.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell>{row.id}</TableCell>\n                                    <TableCell>{row.bankName}</TableCell>\n                                    <TableCell>{row.accountNumber}</TableCell>\n                                    <TableCell>{row.initialAmount}</TableCell>\n                                    <TableCell>{formatter.formatDate(row.startDate)}</TableCell>\n                                    <TableCell>{formatter.formatDate(row.endDate)}</TableCell>\n                                    <TableCell>{row.interestPercentage}</TableCell>\n                                    <TableCell>{row.taxesPercentage}</TableCell>\n                                    <TableCell>{row.user && row.user.name}</TableCell>\n                                    <TableCell className={classes.operationCell}>\n                                        <Button variant='contained' color='primary' onClick={handleEdit.bind(null, row.id)}>\n                                            <Edit/> Edit\n                                        </Button>\n                                        &nbsp;\n                                        <Button variant='contained' color='secondary' onClick={handleDelete.bind(null, row.id)}>\n                                            <Delete/> Delete\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        </>\n    )\n}\n\nfunction mapStateToProps(state: RootState) {\n    const { user } = state.authentication;\n    return {\n        user\n    };\n}\n\nconst connectedDepositListPage = connect(mapStateToProps)(DepositListPage);\nexport { connectedDepositListPage as DepositListPage }\n","import React, {ComponentProps, useEffect, useState} from 'react';\nimport {RootState} from \"../../store/reducers\";\nimport {connect} from \"react-redux\";\nimport {TextField} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Alert, Autocomplete} from \"@material-ui/lab\";\nimport { UserModel } from \"../../models\";\nimport {useHistory, useParams} from \"react-router\";\nimport depositsService from '../../services/deposits.service'\nimport usersService from '../../services/users.service'\nimport {Controller, useForm} from \"react-hook-form\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport {AttachMoney} from \"@material-ui/icons\";\nimport {formatter} from \"../../helpers\";\nimport {NavBar} from \"../../components/NavBar\";\nimport {DepositModel} from \"../../models\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst DepositPage = (props: ComponentProps<any>) => {\n    const classes = useStyles();\n\n    const params = useParams<{id?: string}>();\n    const {id: depositId} = params\n    const { user } = props\n    const [users, setUsers] = useState([] as UserModel[])\n    const [error, setError] = useState('')\n    const { register, control, handleSubmit, reset } = useForm();\n    const history = useHistory();\n    const [loading, setLoading] = useState(false)\n\n    const getDeposit = async (id: string): Promise<DepositModel> => {\n        const depositObject = await depositsService.get(id)\n        const deposit = Object.assign({}, depositObject, {\n            startDate: formatter.formatDate(depositObject.startDate),\n            endDate: formatter.formatDate(depositObject.endDate),\n        }) as any\n        return deposit\n    }\n\n    const getUsers = async () => {\n        try {\n            return await usersService.getAll()\n        } catch(e) {\n            setError(e.message)\n        }\n    }\n\n    const onSubmit = async (data: any) => {\n        if(data.user) {\n            data.userId = data.user.id\n        }\n\n        try {\n            if(depositId !== undefined) {\n                await depositsService.update(depositId, data);\n            } else {\n                await depositsService.create(data);\n            }\n            history.push('/deposits')\n        } catch(e) {\n            setError(e.message)\n        }\n    }\n\n    const initialize = async () => {\n        setLoading(true)\n\n        try {\n            let users = null;\n\n            if(user.role === 'ADMIN') {\n                users = await getUsers()\n                if(users) {\n                    setUsers(users)\n                }\n            }\n            if(depositId) {\n                const deposit = await getDeposit(depositId)\n                if(users) {\n                    deposit.user = users.find((user) => user.id === deposit.userId)\n                }\n                reset(deposit as {[key:string]: any})\n            }\n        } catch(e) {\n            setError(e.message)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        initialize()\n    }, [])\n\n\n    return (\n        <>\n            <NavBar/>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                {loading ? <div>Loading...</div> :\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <AttachMoney/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Deposit information\n                    </Typography>\n                    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n                        <Grid container spacing={2}>\n                            {error !== '' && <Alert severity='error'>{error}</Alert>}\n                            <Grid item xs={12}>\n                                <TextField\n                                    autoComplete=\"Bank Name\"\n                                    name=\"bankName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"bankName\"\n                                    label=\"Bank Name\"\n                                    autoFocus\n                                    inputRef={register({ required: true })}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"accountNumber\"\n                                    label=\"Account Number\"\n                                    name=\"accountNumber\"\n                                    autoComplete=\"Account Number\"\n                                    inputRef={register({ required: true })}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"initialAmount\"\n                                    label=\"Initial Amount\"\n                                    type=\"number\"\n                                    inputProps = {{step: 0.01}}\n                                    id=\"initialAmount\"\n                                    autoComplete=\"Initial Amount\"\n                                    inputRef={register({ required: true})}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"startDate\"\n                                    label=\"Start Date\"\n                                    type=\"date\"\n                                    id=\"startDate\"\n                                    inputRef={register({ required: true })}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"endDate\"\n                                    label=\"End Date\"\n                                    type=\"date\"\n                                    id=\"endDate\"\n                                    inputRef={register({ required: true })}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"interestPercentage\"\n                                    label=\"Interest Percentage\"\n                                    type=\"number\"\n                                    id=\"interestPercentage\"\n                                    autoComplete=\"Interest Rate\"\n                                    inputRef={register({ required: true })}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"taxesPercentage\"\n                                    label=\"Tax Percentage\"\n                                    type=\"number\"\n                                    id=\"taxesPercentage\"\n                                    autoComplete=\"Tax Rate\"\n                                    inputRef={register({ required: true, min: 0 })}\n                                />\n                            </Grid>\n                            {\n                                user.role === 'ADMIN' &&\n                                <Grid item xs={12}>\n                                    <Controller\n                                        render={(props) => (<Autocomplete\n                                                id=\"combo-box-demo\"\n                                                {...props}\n                                                options={users}\n                                                fullWidth\n                                                getOptionLabel={(option: UserModel) => option.name ?? ''}\n                                                onChange={(_, data) => props.onChange(data)}\n                                                style={{ width: 300 }}\n                                                renderInput={\n                                                    (params) =>\n                                                        <TextField {...params} label=\"User\" variant=\"outlined\" />\n                                                }\n                                            />)}\n                                        name='user'\n                                        control={control}\n                                        defaultValue={null}\n                                        rules={{required: 'Required field'}}>\n                                    </Controller>\n                                </Grid>\n                            }\n\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            {depositId ? 'Save' : 'Create'}\n                        </Button>\n                    </form>\n                </div>}\n            </Container>\n        </>\n    )\n}\n\nfunction mapStateToProps(state: RootState) {\n    const { user } = state.authentication;\n    return {\n        user\n    };\n}\n\nconst connectedDepositPage = connect(mapStateToProps)(DepositPage);\nexport { connectedDepositPage as DepositPage }\n","import React, {ComponentProps, useState} from 'react';\nimport {\n    Container,\n    Grid,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Create, ViewList} from \"@material-ui/icons\";\nimport {RootState} from \"../../store/reducers\";\nimport {connect} from \"react-redux\";\nimport { history } from '../../helpers/history';\nimport {NavBar} from \"../../components/NavBar\";\nimport pageStyles from '../styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    nav: {\n        flexGrow: 1,\n    },\n    link: {\n        color: 'white',\n        fontSize: '1.2em',\n        fontWeight: 'bold',\n        textDecoration: 'none',\n        marginRight: theme.spacing(1)\n    },\n    paperButton: {\n        padding: theme.spacing(3),\n        fontSize: '1.4em',\n        color: 'white',\n        cursor: 'pointer'\n    },\n    paperPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n    paperWaring: {\n        backgroundColor: theme.palette.warning.main\n    },\n    paperSuccess: {\n        backgroundColor: theme.palette.success.main\n    },\n    operationIcon: {\n        fontSize: '1.4em',\n        verticalAlign: 'middle',\n        marginRight: theme.spacing(5)\n    },\n\n    operationSection: {\n        marginTop: theme.spacing(6)\n    },\n}));\n\nconst HomePage = (props: ComponentProps<any>) => {\n    const pageClasses = pageStyles();\n    const classes = useStyles();\n    const { user } = props\n\n    const handleCreateDeposit = () => {\n        history.push('/deposits/create')\n    }\n\n    const handleViewDeposit = () => {\n        history.push('/deposits')\n    }\n\n    const handleCreateUser = () => {\n        history.push('/users/create')\n    }\n\n    const handleViewUser = () => {\n        history.push('/users')\n    }\n\n    return (\n        <>\n            <NavBar/>\n            <Container fixed className={pageClasses.page}>\n                <section>\n                    <Typography variant='h3'>\n                        Welcome to Dashboard!\n                    </Typography>\n                    <p>\n                        This is test dashboard developed by Zhao. Please leave us feedback for more features and better look.\n                    </p>\n                </section>\n                <section className={classes.operationSection}>\n                    <Typography variant='h4'>Deposit</Typography>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={6}>\n                            <Paper onClick={handleCreateDeposit}\n                                   className={`${classes.paperButton} ${classes.paperPrimary}`}>\n                                <Create className={classes.operationIcon}/>\n                                Create Deposit\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Paper onClick={handleViewDeposit}\n                                   className={`${classes.paperButton} ${classes.paperWaring}`}>\n                                <ViewList className={classes.operationIcon}/>\n                                View Deposits\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </section>\n\n                {\n                    (user.role === 'MANAGER' || user.role === 'ADMIN') &&\n                    <section className={classes.operationSection}>\n                        <Typography variant='h4'>User</Typography>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} md={6}>\n                                <Paper onClick={handleCreateUser}\n                                       className={`${classes.paperButton} ${classes.paperPrimary}`}>\n                                    <Create className={classes.operationIcon}/>\n                                    Create User\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <Paper onClick={handleViewUser}\n                                       className={`${classes.paperButton} ${classes.paperWaring}`}>\n                                    <ViewList className={classes.operationIcon}/>\n                                    View Users\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </section>\n                }\n            </Container>\n        </>\n    )\n}\n\nfunction mapStateToProps(state: RootState) {\n    const { user } = state.authentication;\n    return {\n        user\n    };\n}\n\nconst connectedHomePage = connect(mapStateToProps)(HomePage);\nexport { connectedHomePage as HomePage }\n","import React from 'react';\nimport {Route, Redirect, RouteProps} from 'react-router-dom';\n\ninterface PrivateRouteProps extends RouteProps{\n    component: any;\n    loggedIn: boolean;\n}\n\nexport const PrivateRoute = ({ component: Component, loggedIn, ...rest }: PrivateRouteProps) => {\n    return (\n        <Route {...rest} render={props => (\n            loggedIn\n                ? <Component {...props} />\n                : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )} />\n    )\n}\n","import React, {useEffect, useState} from 'react';\nimport {RootState} from \"../../store/reducers\";\nimport {connect} from \"react-redux\";\nimport {NavBar} from \"../../components/NavBar\";\nimport {\n    Button,\n    Container,\n    Grid,\n    Paper,\n    Table, TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport {Create, Delete, Edit} from \"@material-ui/icons\";\nimport usersService from \"../../services/users.service\";\nimport { UserModel } from \"../../models\";\nimport pageStyles from \"../styles\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useHistory} from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    searchBar: {\n        flexGrow: 1\n    },\n    table: {},\n    tableBar: {\n        marginBottom: '5px'\n    },\n    dangerButton: {\n        backgroundColor: theme.palette.error.main\n    },\n    operationCell: {\n        whiteSpace: 'nowrap'\n    }\n}))\n\nconst UserListPage = function () {\n    const pageClasses= pageStyles()\n    const classes = useStyles()\n    const [users, setUsers] = useState([] as UserModel[])\n    const [error, setError] = useState('')\n    const history = useHistory();\n\n    const handleEdit = (id: string) => {\n        history.push(`/users/edit/${id}`);\n    }\n\n    const handleDelete = async (id: string) => {\n        try {\n            await usersService.delete(id)\n            const index = users.findIndex((row) => row.id === id)\n            users.splice(index, 1)\n            setUsers(users.slice())\n        } catch(e) {\n            setError(e.message)\n        }\n    }\n\n    const handleCreate = () => {\n        history.push(`/users/create`);\n    }\n\n    const getUsers = async (): Promise<void> => {\n        try {\n            const results = await usersService.getAll()\n            setUsers(results)\n        } catch(e) {\n            setError(e.message)\n        }\n    }\n\n    useEffect(() => {\n        getUsers()\n    }, [])\n\n    return (\n        <>\n            <NavBar/>\n            <Container fixed className={pageClasses.page}>\n                {error !== '' && <Alert severity='error'>{error}</Alert>}\n                <Grid container spacing={3} className={classes.tableBar}>\n                    <Grid item className={classes.searchBar}>\n                    </Grid>\n                    <Grid item>\n                        <Button variant='contained' color='primary' onClick={handleCreate}>\n                            <Create/>Create\n                        </Button>\n                    </Grid>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} size='small' aria-label='Deposit Table'>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Id</TableCell>\n                                <TableCell>Name</TableCell>\n                                <TableCell>Email</TableCell>\n                                <TableCell>Role</TableCell>\n                                <TableCell/>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell>{row.id}</TableCell>\n                                    <TableCell>{row.name}</TableCell>\n                                    <TableCell>{row.email}</TableCell>\n                                    <TableCell>{row.role}</TableCell>\n                                    <TableCell className={classes.operationCell}>\n                                        <Button variant='contained' color='primary' onClick={\n                                            () => row.id && handleEdit(row.id)}>\n                                            <Edit/> Edit\n                                        </Button>\n                                        &nbsp;\n                                        <Button variant='contained' color='secondary' onClick={\n                                            () => row.id && handleDelete(row.id)}>\n                                            <Delete/> Delete\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        </>\n    );\n}\n\n\nfunction mapStateToProps(state: RootState) {\n    const { user } = state.authentication;\n    return {\n        user\n    };\n}\n\nconst connectedUserPage = connect(mapStateToProps)(UserListPage);\nexport { connectedUserPage as UserListPage }\n","import React, {ComponentProps, useEffect, useState} from 'react'\nimport {RootState} from \"../../store/reducers\";\nimport {connect} from \"react-redux\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport {NavBar} from \"../../components/NavBar\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {config} from \"../../config\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\nimport {usersService} from '../../services'\nimport {useHistory, useParams} from \"react-router\";\nimport {Person} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    inputError: {\n        color: theme.palette.error.main\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst UserPage = (props: ComponentProps<any>) => {\n    const emailRegex = config.emailRegex\n    const classes = useStyles();\n    const { register, handleSubmit, control, errors, reset } = useForm();\n    const params = useParams<{id?: string}>();\n    const {id: userId} = params\n    const history = useHistory();\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    const onSubmit = async (data: any) => {\n        try {\n            if(userId !== undefined) {\n                await usersService.update(userId, data);\n            } else {\n                await usersService.create(data);\n            }\n            history.push('/users')\n        } catch(e) {\n            setError(e.message)\n        }\n    }\n\n    useEffect(() => {\n        const getUser = async (id: string) => {\n            setLoading(true)\n            try {\n                const userObject = await usersService.get(id) as {[key: string]: any}\n                reset(userObject)\n            } catch(e) {\n                setError(e.message)\n            } finally {\n                setLoading(false)\n            }\n        }\n\n        if(userId) {\n            getUser(userId)\n        }\n\n    }, [reset, userId])\n    return (\n        <>\n            <NavBar/>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                {loading ? <div>Loading...</div> :\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <Person/>\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            User Information\n                        </Typography>\n                        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"name\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        id=\"name\"\n                                        label=\"Name\"\n                                        autoFocus\n                                        inputRef={register({required: true, minLength: 4})}\n                                    />\n                                    <div className={classes.inputError}>\n                                        {errors.name && \"Please type in valid name\"}\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        id=\"email\"\n                                        label=\"Email Address\"\n                                        name=\"email\"\n                                        inputRef={register({pattern: emailRegex})}\n                                    />\n                                    <div className={classes.inputError}>\n                                        {errors.email && \"Please type in valid email\"}\n                                    </div>\n                                </Grid>\n                                {!userId && <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        inputRef={register({required: true, minLength: 6})}\n                                    />\n                                    <div className={classes.inputError}>\n                                        {errors.email && \"Please type in valid password\"}\n                                    </div>\n                                </Grid>\n                                }\n\n                                <Grid item xs={12}>\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel>Role</InputLabel>\n                                        <Controller\n                                            control={control}\n                                            name='role'\n                                            rules={{required: true}}\n                                            error={errors.role && true}\n                                            defaultValue={''}\n                                            as={\n                                                <Select\n                                                    name=\"role\">\n                                                    <MenuItem value=\"\"><em>None</em></MenuItem>\n                                                    <MenuItem value='NORMAL'>Normal</MenuItem>\n                                                    <MenuItem value='MANAGER'>Manager</MenuItem>\n                                                    <MenuItem value='ADMIN'>Admin</MenuItem>\n                                                </Select>\n                                            }>\n\n                                        </Controller>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}>\n                                Save\n                            </Button>\n                        </form>\n                    </div>\n                }\n            </Container>\n        </>\n    )\n}\n\nfunction mapStateToProps(state: RootState) {\n    const { user } = state.authentication;\n    return {\n        user\n    };\n}\n\nconst connectedUserPage = connect(mapStateToProps)(UserPage);\nexport { connectedUserPage as UserPage }\n","import React, {ChangeEvent, useState} from 'react'\nimport {RootState} from \"../../store/reducers\";\nimport {connect} from \"react-redux\";\nimport {ComponentProps} from \"react\";\nimport {NavBar} from \"../../components/NavBar\";\nimport {\n    Button,\n    Container,\n    Grid,\n    Paper,\n    Table, TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField\n} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport {Search} from \"@material-ui/icons\";\nimport {formatter} from \"../../helpers\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport pageStyles from \"../styles\";\nimport {RevenueModel} from \"../../models\";\nimport depositService from \"../../services/deposits.service\";\n\nconst useStyles = makeStyles((theme) => ({\n    fillAvailable: {\n        flexGrow: 1\n    },\n    searchDate: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 150\n    },\n    searchBarButton: {\n    },\n    table: {},\n    topTableBar: {\n        marginBottom: theme.spacing(1)\n    },\n    gainCell: {\n        color: theme.palette.success.main\n    },\n    lossCell: {\n        color: theme.palette.error.main\n    },\n    textRight: {\n        textAlign: 'right'\n    },\n    bottomTableBar: {\n        marginTop: theme.spacing(2)\n    }\n}))\n\nconst RevenuePage = (props: ComponentProps<any>) => {\n    const pageClasses = pageStyles()\n    const classes = useStyles()\n    const [error, setError] = useState('')\n    const [revenues, setRevenues] = useState([] as RevenueModel[])\n    const [period, setPeriod] = useState(\n        {\n            from: formatter.formatDate(new Date()),\n            to: formatter.formatDate(new Date())\n        } as any\n    )\n    const getRevenues = async (period: {from: string, to: string}) => {\n        try {\n            const results = await depositService.revenue(period)\n            setRevenues(results)\n        } catch(e) {\n            setError(e.message)\n        }\n    }\n\n    const handlePeriodChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const element: HTMLInputElement = e.currentTarget\n        setPeriod(Object.assign({}, period, {\n            [element.name]: element.value\n        }))\n    }\n\n    const handleView = () => {\n        getRevenues(period)\n    }\n\n    const sumChanges = (revenues: RevenueModel[]): number => {\n        return revenues.reduce((acc, revenue) => acc + revenue.change, 0)\n    }\n\n    return (\n        <>\n            <NavBar/>\n            <Container fixed className={pageClasses.page}>\n                {error !== '' && <Alert severity='error'>{error}</Alert>}\n                <Grid container spacing={3} className={classes.topTableBar}>\n                    <Grid item className={classes.fillAvailable}>\n                        <TextField label='Start' name='from' type='date' className={classes.searchDate} value={period.from} onChange={handlePeriodChange}/>\n                        <TextField label='Expire' name='to' type='date' className={classes.searchDate} value={period.to} onChange={handlePeriodChange}/>\n                        <Button variant='contained' className={classes.searchBarButton} onClick={handleView}>\n                            <Search/>View\n                        </Button>\n                    </Grid>\n                </Grid>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} size='small' aria-label='Deposit Table'>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Id</TableCell>\n                                <TableCell>Bank Name</TableCell>\n                                <TableCell>Account Number</TableCell>\n                                <TableCell>Initial Amount</TableCell>\n                                <TableCell>Start</TableCell>\n                                <TableCell>Expire</TableCell>\n                                <TableCell>Interest Percentage</TableCell>\n                                <TableCell>Tax Percentage</TableCell>\n                                <TableCell>Gain/Loss</TableCell>\n                                <TableCell>User</TableCell>\n                                <TableCell/>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {revenues.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell>{row.id}</TableCell>\n                                    <TableCell>{row.bankName}</TableCell>\n                                    <TableCell>{row.accountNumber}</TableCell>\n                                    <TableCell>{row.initialAmount}</TableCell>\n                                    <TableCell>{formatter.formatDate(row.startDate)}</TableCell>\n                                    <TableCell>{formatter.formatDate(row.endDate)}</TableCell>\n                                    <TableCell>{row.interestPercentage}</TableCell>\n                                    <TableCell>{row.taxesPercentage}</TableCell>\n                                    <TableCell className={row.change > 0 ? classes.gainCell: classes.lossCell}>\n                                        {formatter.formatNumber(row.change)}\n                                    </TableCell>\n                                    <TableCell>{row.user && row.user.name}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <Grid container className={classes.bottomTableBar}>\n                    <Grid xs={12} item className={classes.textRight}>\n                        Total: {formatter.formatNumber(sumChanges(revenues))}\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}\nfunction mapStateToProps(state: RootState) {\n    const { user } = state.authentication;\n    return {\n        user\n    };\n}\n\nconst connectedRevenuePage = connect(mapStateToProps)(RevenuePage);\nexport { connectedRevenuePage as RevenuePage }\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Router, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { LoginPage } from \"./pages/login\";\nimport { RegisterPage } from \"./pages/register\";\nimport {DepositListPage, DepositPage} from \"./pages/deposits\";\nimport { HomePage } from \"./pages/home/HomePage\";\nimport { history } from './helpers/history';\nimport {alertActions} from \"./store/actions/alert.action\";\nimport {RootState} from \"./store/reducers\";\nimport { PrivateRoute } from \"./components\";\nimport {AlertState} from \"./store/reducers/alert.reducer\";\nimport {Alert} from \"@material-ui/lab\";\nimport {UserListPage, UserPage} from \"./pages/users\";\nimport {RevenuePage} from \"./pages/deposits/RevenuePage\";\n\ninterface AppProps {\n    alert: AlertState,\n    loggedIn: boolean\n}\n\nclass App extends Component<AppProps> {\n    constructor(props: any) {\n        super(props);\n        const { dispatch } = props;\n        history.listen((location, action) => {\n            // clear alert on location change\n            dispatch(alertActions.clear());\n        });\n    }\n\n    render() {\n        const { alert, loggedIn } = this.props;\n\n        return (\n            <div>\n                {alert.message &&\n                    <Alert severity={alert.type}>{alert.message}</Alert>\n                }\n                <Router history={history}>\n                    <PrivateRoute exact loggedIn={loggedIn} path='/' component={HomePage}/>\n                    <Route path='/login' component={LoginPage}/>\n                    <Route path='/register'>\n                        <RegisterPage/>\n                    </Route>\n                    <Route exact path='/users'>\n                        <UserListPage/>\n                    </Route>\n                    <Route exact path='/users/create'>\n                        <UserPage/>\n                    </Route>\n                    <Route exact path='/users/edit/:id'>\n                        <UserPage/>\n                    </Route>\n                    <Route exact path='/deposits'>\n                        <DepositListPage/>\n                    </Route>\n                    <Route path='/deposits/create'>\n                        <DepositPage/>\n                    </Route>\n                    <Route path='/deposits/edit/:id'>\n                        <DepositPage/>\n                    </Route>\n                    <Route path='/deposits/revenue'>\n                        <RevenuePage/>\n                    </Route>\n                </Router>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: RootState) {\n    const { alert, authentication: {loggedIn} } = state;\n    return {\n        alert,\n        loggedIn\n    };\n}\n\nconst connectedApp = connect(mapStateToProps)(App);\nexport default connectedApp;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from './deposit.model'\nexport * from './response_data.model'\nexport * from './revenue.model'\nexport * from './user.model'\n","import { UserModel } from \"./user.model\";\n\nexport interface DepositModel {\n    id: string;\n    bankName: string;\n    accountNumber: string;\n    initialAmount: number;\n    startDate: Date;\n    endDate: Date;\n    interestPercentage: number;\n    taxesPercentage: number;\n    user?: UserModel;\n    userId: string;\n}\n\nexport function depositModelFromJson(json: any): DepositModel {\n    return Object.assign({}, json, {\n        startDate: new Date(json.startDate),\n        endDate: new Date(json.endDate)\n    })\n}\n","import { UserModel } from \"./user.model\";\n\nexport interface RevenueModel {\n    id: string;\n    bankName: string;\n    accountNumber: string;\n    initialAmount: number;\n    startDate: Date;\n    endDate: Date;\n    interestPercentage: number;\n    taxesPercentage: number;\n    change: number;\n    from: Date;\n    to: Date;\n    user?: UserModel;\n    userId: string;\n}\n\nexport function revenueModelFromJson(json: any): RevenueModel {\n    return Object.assign({}, json, {\n        startDate: new Date(json.startDate),\n        endDate: new Date(json.endDate)\n    })\n}\n"],"sourceRoot":""}